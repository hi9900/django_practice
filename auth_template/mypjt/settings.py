"""
Django settings for mypjt project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=ehv_x3*syth-4j4xqj%ro*8ie)6#0(bj**_4&b6ke9x=2o_rq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'accounts',
    'community',
    'movies',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # allauth
    'django.contrib.sites', # <- 의존성 앱
    'allauth', # <- 추가
    'allauth.account', # <- 추가
    'allauth.socialaccount', # <- 추가
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # <- 디폴트 모델 백엔드
    'allauth.account.auth_backends.AuthenticationBackend', # <- 추가
)

SITE_ID = 1 # 사이트 아이디 기본값

ACCOUNT_SIGNUP_REDIRECT_URL = "movies:index"
LOGIN_REDIRECT_URL = "movies:index"
# 터미널 콘솔로 이메일 보내기 (변경해야함)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# email로 로그인
ACCOUNT_AUTHENTICATION_METHOD = 'email'     # 로그인 시 email 사용
ACCOUNT_EMAIL_REQUIRED = True   # email 필수
ACCOUNT_EMAIL_VERIFICATION = 'optional'     # 회원가입 email 인증
ACCOUNT_CONFIRM_EMAIL_ON_GET = True     # 링크 클릭하면 인증완료
ACCOUNT_USERNAME_REQUIRED = False   # username 필수제거

# 수정한 form 사용
ACCOUNT_SIGNUP_FORM_CLASS = 'accounts.forms.SignupForm'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mypjt.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mypjt.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {   # 커스텀 유효성 검사
        "NAME": "accounts.validators.CustomPasswordValidator",
    }
]

# 유효성검사 통과 못할때 비밀번호 지워짐 방지
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = True


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.User'
